//
// Features objects
//
// Features are usually a list of terms with their related icon
//

// A row for inner content which always take 100% width
@mixin feature-row(
) {
    @include sv-flex(1, 0, 100%);
    margin: 0 auto;
    width: 100%;

    // Use a variable to avoid a bug with other mixin usage which may retain
    // ampersand value from another previous usage
    $sel: &;
    &:not(#{$sel}--unpadded) {
        padding: 0.5rem 0;
    }

    // Remove last child bottom margin to respect strict padding with items
    & *:last-child {
        margin-bottom: 0;
    }
}


//
// Single feature item
//
@mixin feature-item(
    $divider: null,
    $expand: false,
    $hjustify: flex-start,
    $halign: flex-start,
    $valign: center,
    $icon-size: null,
    $icon-hspace: null,
    $icon-fill: null,
    $parent_selector: &,
) {
    display: flex;
    justify-content: $hjustify;
    align-content: $halign;
    align-items: $valign;
    margin-right: $divider;

    #{$parent_selector}__term {
        @if $expand{
            @include sv-flex(1, 1, auto);
        } @else {
            @include sv-flex(0, 0, auto);
        }
    }

    #{$parent_selector}__icon {
        @include sv-flex(0, 0, auto);
        display: block;
        width: $icon-size;
        height: $icon-size;
        fill: $icon-fill;
        margin-left: $icon-hspace;
        margin-right: $icon-hspace;
    }
}


@mixin feature-list(
    $width: 100%,
    $container-width: $width,
    $divider: null,
    $list-halign: flex-start,
    $list-hjustify: flex-start,
    $list-valign: stretch,
    $item-parent: &,
    $item-divider: 1rem,
    $item-hjustify: flex-start,
    $item-halign: flex-start,
    $item-valign: center,
    $item-size: null,
    $icon-size: 1rem,
    $icon-hspace: 0.25rem,
    $icon-fill: null,
) {
    $base-selector: &;

    display: flex;
    width: $width;
    margin: 0;
    padding: 0;
    flex-wrap: wrap;
    justify-content: $list-hjustify;
    align-content: $list-halign;
    align-items: $list-valign;
    list-style-type: none;

    &__container {
        display: flex;
        width: $container-width;
        margin: 0;
        padding: 0;
        flex-wrap: wrap;
        justify-content: $list-hjustify;
        align-content: $list-halign;
        align-items: $list-valign;
        list-style-type: none;
    }

    &__row{
        @include feature-row;
    }

    &__item {
        @include feature-item(
            $divider: $item-divider,
            $hjustify: $item-hjustify,
            $halign: $item-halign,
            $valign: $item-valign,
            $icon-size: $icon-size,
            $icon-hspace: $icon-hspace,
            $icon-fill: $icon-fill,
            $parent_selector: $base-selector,
            $expand: if($item-size, true, false),
        );
        @if $item-size{
            @if $item-divider {
                @include sv-flex(1, 1, calc(#{$item-size} - #{$item-divider}));
            } @else {
                @include sv-flex(1, 1, $item-size);
            }
        } @else {
            @include sv-flex(0, 0, auto);
        }
    }
}
