.nested-item {
  $nesteditem-base-selector: &;

  //
  // Default variant acts like a basic bullet list with some minor adjustments
  //
  &--list {
    @include sv-flex(1, 0, 100%);

    // First level item title have a little bit of distinction for readability
    &.nested-item--0 > #{$nesteditem-base-selector}__content {
      @include font-size($h6-font-size);
      margin-bottom: 0.5rem;
    }

    #{$nesteditem-base-selector}__items {
      margin: 0;
      padding: 0 0 0 0.9rem;
      list-style-type: disc;

      li {
        margin: 0.1rem;
        padding: initial;
      }
    }
  }

  //
  // Accordion variant folds first level which can be unfolded, second level
  // is always a list
  //
  &--accordion {
    $accordion-border-color: r-theme-val(accordion-plan, border-color);
    $accordion-border-size: rem-calc(2px);

    @include sv-flex(1, 0, 100%);

    // Reset horizontal "list" variant behaviors to a more standard bullet list
    #{$nesteditem-base-selector}--list {
      display: block;

      #{$nesteditem-base-selector}__content {
        @include font-size($h6-font-size);
        padding: 0;
        font-weight: normal;
        color: r-theme-val(accordion-plan, content-color);
      }

      #{$nesteditem-base-selector}__items {
        display: block;
        margin: 0;
        padding: 0 0 0 0.9rem;
        list-style-type: disc;

        li {
          padding: 0;
          color: r-theme-val(accordion-plan, content-color);
          font-weight: normal;
        }

        a {
          @include font-size($h6-font-size);
          padding: 0;
          color: inherit;
          font-weight: inherit;
          text-decoration: underline;
        }
      }
    }

    // Apply specific accordion item and direct children behaviors
    & > #{$nesteditem-base-selector}__items {
      position: relative;
      margin: 0;
      padding: 0.5rem 0.5rem 0.5rem 2.5rem;
      background: r-theme-val(accordion-plan, background-color);

      // Draw left border where item dots will be fixed
      &::before {
        content: '';
        position: absolute;
        top: 1.75rem;
        left: 1rem;
        bottom: 1.75rem;
        width: $accordion-border-size;
        border-left: $accordion-border-size solid $accordion-border-color;
      }

      & > li {
        padding: 0;
        position: relative;
        list-style-type: none;

        @if $accordion-border-color {
          &[data-accordion-active] {
            &:last-child {
              // Trick to continue border
              &::before {
                content: '';
                position: absolute;
                top: 1.25rem;
                left: -1.5rem;
                bottom: 0;
                width: $accordion-border-size;
                border-left: $accordion-border-size solid $accordion-border-color;
              }
            }
          }
        }

        // Draw item dot
        @if r-theme-val(accordion-plan, item-dot-color) {
          &::after {
            content: '';
            position: absolute;
            top: 1rem;
            left: -1.68rem;
            width: 0.5rem;
            height: 0.5rem;
            background: r-theme-val(accordion-plan, item-dot-color);
            border-radius: 100%;
          }
        }

        #{$nesteditem-base-selector}__content {
          @include font-size($h6-font-size);
          padding: 0;
          font-weight: normal;
          color: r-theme-val(accordion-plan, content-color);
        }

        #{$nesteditem-base-selector}__title {
          @include font-size($h3-font-size);
          display: block;
          position: relative;
          margin-bottom: 0;
          padding: 0.5rem 0.5rem 0.5rem 1.5rem;
          color: r-theme-val(accordion-plan, title-color);
          font-weight: bold;
          line-height: 1.1;
          text-align: left;
          cursor: pointer;
          background: transparent;
          border: 0;

          @if r-theme-val(accordion-plan, dot-closed) {
            &::before {
              content: '';
              position: absolute;
              top: 0.6rem;
              left: -0.2rem;
              width: 1.3rem;
              height: 1.3rem;
              background-repeat: no-repeat;
              background-position: center;
              background-size: 100% 100%;
              background-image: r-theme-val(accordion-plan, dot-closed);
            }

            // Display management for accordion behavior on button click
            // On default, content is hidden
            & + #{$nesteditem-base-selector}__items {
              display: none;
            }
            // Once activated, content is showed
            &[data-accordion-open] {
              @if r-theme-val(accordion-plan, dot-opened) {
                &::before {
                  background-image: r-theme-val(accordion-plan, dot-opened);
                }
              }

              & + #{$nesteditem-base-selector}__items {
                display: block;
              }
            }
          }
        }
      }
    }

    // Adjust some accordion cosmetic for sub accordions (level > 1)
    #{$nesteditem-base-selector}--accordion {
      & > #{$nesteditem-base-selector}__items {
        padding: 0;
        margin-left: 1.3rem;

        &::before {
          display: none;
        }

        & > li {
          &:last-child::before {
            display: none;
          }
          &::after {
            display: none;
          }

          #{$nesteditem-base-selector}__title {
            @include font-size($h4-font-size);
            padding: 0.3rem 0.3rem 0.3rem 1.5rem;
            color: r-theme-val(accordion-plan, content-color);

            @if r-theme-val(accordion-plan, dot-closed) {
              &::before {
                top: 0.3rem;
                left: -0.1rem;
                width: 1rem;
                height: 1rem;
              }
            }
          }
        }
      }
    }
  }
}
