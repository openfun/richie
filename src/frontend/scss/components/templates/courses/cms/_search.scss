$r-search-filters-width: 18rem !default;
$r-search-filters-gutter: 0.2rem !default;

.search-template {
    @include make-container();
    @include make-container-max-widths();
    padding: 0;
    @include content-padding-fix;
    flex-grow: 1;
    display: flex;
    flex-direction: column;

    &__content {
        flex-grow: 1;
        display: flex;
        flex-direction: column;

        & > .richie-react--search {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
        }
    }
}

.search {
    @include make-container();
    @include make-container-max-widths();
    display: flex;
    margin: 0;
    flex-direction: row;
    flex-wrap: wrap;

    &__filters {
        z-index: 1;
        flex-grow: 1;
        flex-shrink: 0;
        flex-basis: 100%;
        background: r-theme-val(search-filters, base-background);

        // Force the filters sidebar to take up the whole height even when it's empty.
        // This should help avoid a glitch where we see the footer at the top of the page and the UI jumps
        // around as the filters appear.
        min-height: 100vh;

        position: absolute;
        left: 0;
        max-width: 85vw;
        transform: translateX(-100.1%);
        transition: ease-in-out 0.5s;

        @include media-breakpoint-up(lg) {
            z-index: auto;
            position: relative;
            left: auto;
            flex-basis: $r-search-filters-width;
            max-width: $r-search-filters-width;
            transform: none;
        }

        &--active {
            transform: translateX(0);
        }

        &__toggle {
            position: absolute;
            top: 1.25rem;
            right: -3rem;
            width: 2.5rem;
            height: 2.5rem;
            padding: 0.5rem;
            background: r-theme-val(search-filters, toggler-background);
            border: none;
            border-radius: $border-radius;
            box-shadow: r-theme-val(search-filters, toggler-shadow);

            &__icon {
                width: 100%;
                height: 100%;
                fill: r-theme-val(search-filters, toggler-fill);
            }
        }
    }

    &__results {
        position: relative;
        flex-grow: 1;
        flex-shrink: 0;
        flex-basis: 100%;
        max-width: 100%;

        @include media-breakpoint-up(lg) {
            position: static;
            flex-basis: calc(100% - #{$r-search-filters-width});
            max-width: calc(100% - #{$r-search-filters-width});
            padding: 2rem 0 0 2rem;
        }

        &__title {
            padding: 1.5rem 0 0;
            text-align: center;
        }

        &__error {
            display: flex;
            width: 100%;
            max-width: 80vw;
            height: 100%;
            padding-bottom: 20rem;
            justify-content: center;
            align-items: center;
            margin: auto;
            text-align: center;
        }

        &__overlay {
            visibility: hidden;
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            background: r-theme-val(search-results, overlay);
            opacity: 0;
            transition: 0.5s ease-in-out;

            &--visible {
                visibility: visible;
                opacity: 0.75;
            }
        }
    }

    // Shorter available width decrease glimpse width
    .course-glimpse-list {
        .course-glimpse {
            @include media-breakpoint-up(md) {
                @include sv-flex(1, 0, calc(50% - #{$r-course-glimpse-gutter * 2}));
            }
            @include media-breakpoint-up(lg) {
                @include sv-flex(1, 0, calc(33.3333% - #{$r-course-glimpse-gutter * 2}));
            }
        }
    }
}

.search-filters-pane {
    background: inherit;
    overflow: hidden; // Prevent margin-collapsing as .search-filters-pane has a background

    &__title {
        @include font-size($h6-font-size);
        margin: 0 $r-search-filters-gutter;
        padding: 2rem 0 1rem;
        color: r-theme-val(search-filters-pane, title-color);
    }

    &__clear {
        display: block;
        cursor: pointer;
        margin: 0.2rem $r-search-filters-gutter;
        padding: 0rem 0.5rem 0;

        &,
        &:hover,
        &:active {
            color: r-theme-val(search-filters-pane, clearer-hover-color);
        }

        &--hidden {
            visibility: hidden;
        }
    }
}

.search-filter-group {
    margin: 0 $r-search-filters-gutter;

    &__title {
        margin: 0;
        padding: 0.3rem 0.5rem 0.3rem 0.1rem;
        color: r-theme-val(search-filters-group, title-color);
        font-size: 0.7rem;
        font-weight: $font-weight-boldest;
    }

    &__list {
        @include m-o-list-group__container;
    }

    & + .search-filter-group{
        margin-top: 1rem;
    }
}

.search-filter-group-modal {
    display: flex;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    max-width: 30rem;
    margin: 3rem auto;
    color: r-theme-val(search-filters-group-modal, base-color);
    flex-direction: column;
    justify-content: space-between;
    background: r-theme-val(search-filters-group-modal, base-background);
    border: 1px solid r-theme-val(search-filters-group-modal, base-border);
    border-radius: 4px;
    outline: none;
    overflow: auto;

    &__form {
        flex-grow: 1;

        &__title {
            display: block;
            margin: 0;
            padding: 1rem;
            text-align: center;
            font-size: 1.1rem;
            font-weight: $font-weight-boldest;
        }

        &__input {
            width: 100%;
            padding: 0.5rem 1rem;
            border: 1px solid r-theme-val(search-filters-group-modal, input-border);
            border-left-width: 0;
            border-right-width: 0;
        }

        &__error {
            padding: 1rem;
        }

        &__values {
            margin: 0;
            padding: 0;
            list-style-type: none;

            &__item {
                & > button {
                    width: 100%;
                    padding: 0.5rem 1rem;
                    text-align: left;
                    background: inherit;
                    border: none;
                    border-bottom: 1px solid r-theme-val(search-filters-group-modal, values-border);
                    color: inherit;
                }
            }
        }
    }

    &__close {
        padding: 0.5rem 1rem;
        flex-shrink: 0;
        flex-grow: 0;
        color: r-theme-val(search-filters-group-modal, close-color);
        background: r-theme-val(search-filters-group-modal, close-background);
        border-bottom: 0;
        border-right: 0;
        border-left: 0;
    }
}

.search-filter-group-modal-overlay {
    z-index: 10; // Make sure the overlay is above any random 0-1-2 z-indexes in content
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: r-theme-val(search-filters-group-modal, overlay-background);
}

.search-filter-group-modal-button {
    @include button-small();
    @include r-button-colors(r-theme-val(search-filters-group-modal, button), $apply-border: true, $include-hover: true);
    margin-top: 1rem;
    width: 100%;
    font-weight: $font-weight-boldest;
    text-transform: uppercase;
}


.search-filter-value-leaf,
.search-filter-value-parent__self__label {
    align-items: center;
    margin-bottom: 0;
    border: none;
    background: inherit;
    color: r-theme-val(search-filters-value, base-color);
    cursor: pointer;

    &:hover,
    &:focus {
        z-index: 1; // Place hover/active items above their siblings for proper border styling
        color: r-theme-val(search-filters-value, hover-color);
    }

    &--disabled,
    &--disabled:hover,
    &--disabled:focus {
        font-style: italic;
        opacity: 0.6;
        cursor: not-allowed;
    }

    &__checkbox {
        align-self: start;
        margin-right: 0.5rem;
        margin-top: 0.2rem;
        font-size: 110%;
    }

    &__content {
        flex-grow: 1;
        text-align: start;

        &__count {
            @extend .badge;
            @extend .badge-pill;

            display: inline; // So &nbsp; can prevent linebreaks between the name and the count badge
            color: r-theme-val(search-filters-value, count-color);
            background: r-theme-val(search-filters-value, count-background);
            margin-left: 0.375rem;
        }
    }
}

// Most active styles are done on the filter button itself (which is the component itself for leaves
// and an inner part for parents)
.search-filter-value-leaf.active,
.search-filter-value-parent__self.active
    > .search-filter-value-parent__self__label {
    z-index: 2; // Place active items above their siblings for proper border styling
    color: r-theme-val(search-filters-value, active-color);
}

// Border styling needs to be done on an outer component for parents, incl. active styling
.search-filter-value-leaf,
.search-filter-value-parent__self {
    display: flex;
    border-bottom: 1px solid r-theme-val(search-filters-value, base-border);
    padding: 0.4rem 0.5rem;

    &.active {
        border-bottom: 1px solid r-theme-val(search-filters-value, hover-border);
    }
}

.search-filter-value-parent {
    display: flex;
    flex-direction: column;
    padding: 0; // Padding is applied by __self & leaves, not parent

    &__self {
        padding-right: 0; // Make room for the +/-

        &__label {
            display: flex;
            flex-grow: 1;
            padding: 0;
            text-align: start;
        }

        &__unfold {
            border: 0;
            margin-left: 0.4rem;
            padding: 0 0.15rem;
            background: inherit;
            color: r-theme-val(search-filters-value-parent, unfold-color);
            transition: 0.2s ease-in-out;
            line-height: 1.5rem;
            font-size: 1.3rem;
            font-weight: $font-weight-light;
        }
    }

    &__children {
        display: flex;
        flex-direction: column;

        & > .search-filter-value-leaf{
            padding-left: 1.1rem;
        }
    }
}
