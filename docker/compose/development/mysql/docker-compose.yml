version: "3"

services:

  db:
    image: mysql:5.6
    env_file:
      - env.d/development/mysql
    ports:
      - "3316:3306"
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci

  elasticsearch:
    image: fundocker/openshift-elasticsearch:6.6.2

  # We use our production image as a basis for the development image, hence, we
  # define a "base" service upon which the "app" service depends to force
  # richie:latest build.
  base:
    build: .
    image: richie:latest
    # Override the default command so that the container exists immediately when
    # it is run (no server).
    command: echo "I should exit now. Bye."

  app:
    build:
      context: .
      dockerfile: ./docker/images/dev/Dockerfile
    image: richie:dev
    env_file:
      - env.d/development/common
      - env.d/development/mysql
    # Override production container command that runs gunicorn in favor to the
    # django development server (wrapped by dockerize to ensure the db is ready
    # to accept connections before running the development server)
    command: >
      dockerize -wait tcp://db:3306 -timeout 60s python sandbox/manage.py runserver 0.0.0.0:8000
    ports:
      - "8070:8000"
    volumes:
      - .:/app
      - ./data/static:/data/static
      - ./data/media:/data/media
    depends_on:
      - "base"
      - "db"
      - "elasticsearch"

  node:
    image: circleci/node:10
    working_dir: /app/src/frontend
    volumes:
      - .:/app
